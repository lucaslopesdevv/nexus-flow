#!/bin/bash

# Script para inicializar o ambiente de produ√ß√£o

set -e

echo "üöÄ Iniciando Nexus Flow - Ambiente de Produ√ß√£o"

# Verificar se o arquivo .env.production existe
if [ ! -f .env.production ]; then
    echo "‚ùå Arquivo .env.production n√£o encontrado!"
    echo "Por favor, crie o arquivo .env.production com as configura√ß√µes de produ√ß√£o."
    exit 1
fi

# Carregar vari√°veis de ambiente de produ√ß√£o
export $(cat .env.production | xargs)

# Verificar vari√°veis obrigat√≥rias
if [ -z "$CLERK_SECRET_KEY" ] || [ -z "$VITE_CLERK_PUBLISHABLE_KEY" ]; then
    echo "‚ùå Vari√°veis de ambiente obrigat√≥rias n√£o configuradas!"
    echo "Certifique-se de que CLERK_SECRET_KEY e VITE_CLERK_PUBLISHABLE_KEY est√£o definidas."
    exit 1
fi

# Limpar containers existentes se necess√°rio
echo "üßπ Limpando containers antigos..."
docker-compose -f docker-compose.prod.yml down -v --remove-orphans

# Construir e iniciar os servi√ßos
echo "üî® Construindo e iniciando os servi√ßos..."
docker-compose -f docker-compose.prod.yml up --build -d

# Aguardar o banco de dados ficar pronto
echo "‚è≥ Aguardando o banco de dados ficar pronto..."
sleep 15

# Executar migra√ß√µes do Prisma
echo "üìä Executando migra√ß√µes do banco de dados..."
docker-compose -f docker-compose.prod.yml exec api npx prisma migrate deploy

echo "‚úÖ Ambiente de produ√ß√£o iniciado com sucesso!"
echo ""
echo "üåê Aplica√ß√£o: http://localhost"
echo "üîß API: http://localhost:3001"
echo ""
echo "Para parar os servi√ßos: docker-compose -f docker-compose.prod.yml down"
echo "Para ver os logs: docker-compose -f docker-compose.prod.yml logs -f" 